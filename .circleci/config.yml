version: 2
jobs:
  unit-test:
    working_directory: ~/app
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run:
          name: Update npm
          command: "sudo npm install -g npm@latest"
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install dependencies
          command: yarn install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: Run tests
          command: "yarn run test"
  docker-build:
    working_directory: ~/app
    machine:
      docker_layer_caching: false
    steps:
      - checkout
      - run: |
          docker build -t "$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1" .
          docker tag "$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1" "${DOCKER_LOGIN}/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1"
          echo "Build done ---> start login"
          docker login -u $DOCKER_LOGIN	-p $DOCKER_PASSWORD
          echo "login -----> push"
          docker push "${DOCKER_LOGIN}/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1"
  deploy-to-k8s-staging-env:
    working_directory: ~/app
    docker:
      - image: mateothegreat/docker-alpine-gcloud-kubectl
    steps:
      - checkout
      - run:
          name: Set kubernetes deployment environment by branch
          command: |
            sed -i 's/<ENVIRONMENT>/staging/g' Makefile
      - run:
          name: deploy to k8s server
          command: |
            kubectl config set-cluster "$K8S_CLUSTER_NAME" --server="$K8S_URL" --insecure-skip-tls-verify=true
            kubectl config set-credentials "$K8S_USER" --token="$K8S_TOKEN"
            kubectl config set-context "$K8S_CONTEXT" --cluster="$K8S_CLUSTER_NAME" --user="$K8S_USER"
            kubectl config use-context "$K8S_CONTEXT"
            make install
  deploy-to-k8s-production-env:
    working_directory: ~/app
    docker:
      - image: mateothegreat/docker-alpine-gcloud-kubectl
    steps:
      - checkout
      - run:
          name: Set kubernetes deployment environment by branch
          command: |
            sed -i 's/<ENVIRONMENT>/production/g' Makefile
      - run:
          name: deploy to k8s server
          command: |
            kubectl config set-cluster "$K8S_CLUSTER_NAME" --server="$K8S_URL" --insecure-skip-tls-verify=true
            kubectl config set-credentials "$K8S_USER" --token="$K8S_TOKEN"
            kubectl config set-context "$K8S_CONTEXT" --cluster="$K8S_CLUSTER_NAME" --user="$K8S_USER"
            kubectl config use-context "$K8S_CONTEXT"
            make install
workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - unit-test
      - docker-build:
          filters:
            branches:
              only:
                - master
          requires:
            - unit-test
      - deploy-to-k8s-staging-env:
          filters:
            branches:
              only:
                - master
          requires:
            - docker-build
      - deploy-to-k8s-production-env:
          type: approval
          filters:
            branches:
              only:
                - master
          requires:
            - deploy-to-k8s-staging-env
